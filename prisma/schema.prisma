datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  myWines      Wine[]
  myWinesNotes WineNotes[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model WineNotes {
  id    String @id @default(cuid())
  title String
  body  String

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Wine   Wine   @relation(fields: [wineId], references: [id])
  wineId String
}

model Wine {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Varietal   Varietal @relation(fields: [varietalId], references: [id])
  varietalId String

  Type   Type   @relation(fields: [typeId], references: [id])
  typeId String

  WineNotes WineNotes[]
}

model Varietal {
  id    String @id @default(cuid())
  title String
  slug  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Wine Wine[]
}

model Type {
  id    String @id @default(cuid())
  title String
  slug  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Wine Wine[]
}
